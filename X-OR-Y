public class Solution 
{ 
	public static long findPairY(long X) 
	{
		int n = (int)( Math.log(X)/Math.log(2) ) + 1;

        String temp = "";

        // Converting X to its binary representation.
        for (int i = 0; i < n; i++)
        {
            if ( ( (1L << i) & X ) == (1L << i) )
            {
                temp += '1';
            }

            else
            {
                temp += '0';
            }
        }

        // Checking ith bit from left and right.
        long ans = 0;
        for (int i = 0; i < n / 2; i++)
        {
            // If same move to next bit.
            if (temp.charAt(i) == temp.charAt(n - i - 1))
            {
                continue;
            }
            // If ith bit is unset then set the ith bit in ans.
            if (temp.charAt(i) == '0')
            {
                ans += (1L << i);
            }
            // Else set the (n-i-1) bit in ans.
            else
            {
                ans += (1L << (n - i - 1));
            }
        }

        return ans;

	}
}
